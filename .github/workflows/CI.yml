name: CI
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
      - uneq
    tags: '*'
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.4.2' 
          - '1' 
          - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      script:
        - if [[ -a .git/shallow ]]; then git fetch --unshallow; fi
        - julia -e 'using Pkg, LibGit2;
            user_regs = joinpath(DEPOT_PATH[1],"registries");
            mkpath(user_regs);
            all_registries = Dict("General" => "https://github.com/JuliaRegistries/General.git",
                                "HaleyLabRegistry" => "https://github.com/lootie/bbkt-reg.git");
            Base.shred!(LibGit2.CachedCredentials()) do creds
            for (reg, url) in all_registries
                path = joinpath(user_regs, reg);
                LibGit2.with(Pkg.GitTools.clone(url, path; header = "registry $reg from $(repr(url))", credentials = creds)) do repo end
            end
            end'
      - julia -e 'using Pkg; Pkg.build(); Pkg.test("Slepians"; coverage=false)'
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@latest
        with:
          version: '1.6'
      - name: Install dependencies
        run: julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
      - run: julia -e 'import Pkg; Pkg.Registry.add(Pkg.RegistrySpec(url = "https://github.com/lootie/bbkt-reg.jl"))'
      - run: julia -e 'import Pkg; Pkg.Registry.add(Pkg.RegistrySpec(url = "https://github.com/JuliaRegistries/General"))' 
      - name: Build and deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # If authenticating with GitHub Actions token
          DOCUMENTER_KEY: ${{ secrets.DOCUMNETER_KEY }} # If authenticating with SSH deploy key
        run: julia --project=docs/ docs/make.jl
